{
    "swagger":"2.0",
    "info":
    {
        "title":"Parent Follow Up",
        "description":" API for Parent follow up",
        "contact":
        {
"email":"espebobalexiz@gmail.com"
        },
        "license":{
            "name":"MIT",
            "url":"http://www.opensource.org/licenses/mit"
        },
        "version":"1.0.0"
    },
    "externalDocs":
    {
        "url":"https://github.com/Espebob/Parents-Follow-Ups.git",
        "description":"Find more info here"
    },
    "basePath":"/followup",
    "servers":[
        {
            "url":"http://localhost:3500",
            "description":"Local server"
        },
        {
            "url":"https://parents-follow-u.onrender.com",
            "description":"production server"
        }
    ],
    "schemes":["http","https"],
    "tags":[
        {
            "name":"parent follow up",
            "description":"Operations on parents assistants"
        }
    ],
    "paths":
    {
        "/user/signup":
        {
            "post":{
              "tags":["user"],
              "summary":"new user to the system",
              "description":"signup",
              "parameters": [
                {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/User"
                    }
                }
            ],
              "requestBody":{
                "content":{
                  "application/json":{
                    "schema":{
                      "$ref":"#/components/schemas/User"
                    }
                  }
                }
              },
              "responses":{
                "201":{
                  "description":"User created",
                  "content":{
                    "application/json":{
                      "schema":{
                        "$ref":"#/components/schemas/User"
                      }
                    }
                  }
                },
                "400":{
                  "description":"Bad request -Validation error",
                  "content":{
                    "application/json":{
                      "schema":{
                        "type":"object",
                        "properties":{
                          "message":{
                            "type":"string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "/user/signin":
        {
            "post":{
      "tags":["user"],
      "summary":"User Signin in the system",
      "description":"signin",
      "parameters": [
        {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
                "$ref": "#/components/schemas/User"
            }
        }],
        "requestBody":{
            "content":{
                "application/json":{
                    "schema":{
                        "$ref":"#/components/schemas/User"
                    }
                }
            }
        },
        "responses":{
            "200":{
                "description":"User logged in successfully",
                "content":{
                  "application/json":{
                    "schema":{
                      "$ref":"#/components/schemas/User"
                    }
                  }
                }
              },
              "400":{
                "description":"Bad request -Validation error",
                "content":{
                  "application/json":{
                    "schema":{
                      "type":"object",
                      "properties":{
                        "message":{
                          "type":"string"
                        }
                      }
                    }
                  }
                }
              }
        
        }
        
    
}
        },

        "/user/verify":
    {
        "post":{
            "tags":["user"],
            "summary":"Verify a user",
            "description":"OTP Verification",
            "parameters": [
                {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/User"
                    }
                }],
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "description":"Otp was verified",
                        "content":{
                          "application/json":{
                            "schema":{
                              "$ref":"#/components/schemas/User"
                            }
                          }
                        }
                      },
                      "400":{
                        "description":"Bad request -Validation error",
                        "content":{
                          "application/json":{
                            "schema":{
                              "type":"object",
                              "properties":{
                                "message":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                }
        }
    },
    "/user/forgotpassword":
    {
        "post":{
        "tags":["user"],
        "summary":"Forgot password",
        "description":"Forgot password",
        "parameters": [
            {
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/User"
                }
            }],
            "requestBody":{
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/components/schemas/User"
                        }
                    }
                }
            },
            "responses":{
                "200":{
                    "description":"Forgot password was successfully",
                    "content":{
                      "application/json":{
                        "schema":{
                          "$ref":"#/components/schemas/User"
                        }
                      }
                    }
                  },
                  "400":{
                    "description":"Bad request -Validation error",
                    "content":{
                      "application/json":{
                        "schema":{
                          "type":"object",
                          "properties":{
                            "message":{
                              "type":"string"
                            }
                          }
                        }
                      }
                    }
                  }
            }
    }
},
    "/user/resetpassword":{
        "post":{
            "tags":["user"],
            "summary":"Reset password",
            "description":"Reset password",
            "parameters": [
                {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/User"
                    }
                }],
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses":{
                    "200":{
                        "description":"Password was reset successfully",
                        "content":{
                          "application/json":{
                            "schema":{
                              "$ref":"#/components/schemas/User"
                            }
                          }
                        }
                      },
                      "400":{
                        "description":"Bad request -Validation error",
                        "content":{
                          "application/json":{
                            "schema":{
                              "type":"object",
                              "properties":{
                                "message":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                }
        }
    },

    "/user/logout":
    {
        "post":{
  "tags":["user"],
  "summary":"User logged out from the system",
  "description":"logout",
  "parameters": [
    {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": {
            "$ref": "#/components/schemas/User"
        }
    }],
    "requestBody":{
        "content":{
            "application/json":{
                "schema":{
                    "$ref":"#/components/schemas/User"
                }
            }
        }
    },
    "responses":{
        "200":{
            "description":"User logged out successfully",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/User"
                }
              }
            }
          },
          "400":{
            "description":"Bad request -Validation error",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "message":{
                      "type":"string"
                    }
                  }
                }
              }
            }
          }
    
    }
    

}
    },


    "/course/add": {
      "post": {
        "tags": [
          "course"
        ],
        "summary": "Add a new service",
        "description": "add a new course with  the provided details",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Courses"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Courses"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Courses"
                }
              }
            }
          },
          "400": {
            "description": "Bad request -Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
"/course/list": {
      "get": {
        "tags": [
          "course"
        ],
        "summary": "Get all courses",
        "description": "Returns all the courses",
        "responses": {
          "200": {
            "description": "All the courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Courses"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/course/get/{id}": {
      "get": {
        "tags": [
          "course"
        ],
        "summary": "Get a course by id",
        "description": "Returns a course with the provided id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "course found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Courses"
                }
              }
            }
          },
          "404": {
            "description": "course not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/course/get/{category}":{
      "get":
      {
          "tags":["course"],
          "summary":"Get a course by category",
          "description":"Returns a course with the provided courseCategory",
          "parameters":[
              {
                "name": "category",
                "in": "path",
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "course found",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              },
              "400": {
                "description": "Bad request -Validation error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
"/course/update/{id}":
{
  "put":{
      "tags": ["course"],
          "summary": "Update course",
          "description": "Updates course with the provided details",
          "parameters": [
              {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                      "$ref": "#/components/schemas/Courses"
                  }
              },
              {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                      "type": "string"
                  }
              }
          ],
          "requestBody": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/Courses"
                      }
                  }
              }
          },
          "responses": {
              "200": {
                  "description": "course Updated",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Courses"
                          }
                      }
                  }
              },
              "404": {
                  "description": "Course not found",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "message": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
  }
},
"/course/delete/{id}":{
  "delete":
  {
      "tags":["course"],
      "summary":"Delete a course",
      "description":"Delete a course with the provided id",
      "parameters":[
          {
              "name":"id",
              "in":"path",
              "required":true,
              "schema":{
                  "type":"string"
              }
          }
      ],
      "responses":{
          "200":
          {
              "description":"course deleted",
              "content":{
                  "application/json":
                  {
                      "schema":{
                          "$ref":"#/components/schemas/Courses"
                      }
                  }
              }
          },
          "404":
          {
              "description":"Course not found",
              "content":{
                  "application/json":{
                      "schema":{
                          "type": "object",
                          "properties":{
                              "message":{
                                  "type":"string"
                              }
                          }
                      }
                  }
                }
              }
            }
          }
        },

        "/parents/add": {
          "post": {
            "tags": [
              "parent"
            ],
            "summary": "Add a new parent",
            "description": "add a new parent with  the provided details",
            "parameters": [
              {
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/Parents"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Parents"
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Parent added successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Parents"
                    }
                  }
                }
              },
              "400": {
                "description": "Bad request -Validation error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
    "/parents/list": {
          "get": {
            "tags": [
              "parent"
            ],
            "summary": "Get all parents",
            "description": "Returns all the parents",
            "responses": {
              "200": {
                "description": "All the parents",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Parents"
                      }
                    }
                  }
                }
              }
            }
          }
        },
    
    
        "/parents/get/{id}": {
          "get": {
            "tags": [
              "parent"
            ],
            "summary": "Get a parent by id",
            "description": "Returns a parent with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "parent found",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Parents"
                    }
                  }
                }
              },
              "404": {
                "description": "parent not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/parents/get/{category}":{
          "get":
          {
            "tags":["parent"],
            "summary":"Get a parent by course category",
            "description":"Returns a parent with the provided courseCategory",
            "parameters":[
                {
                    "name":"category",
                    "in":"path",
                    "required":true,
                    "schema":{
                        "type":"string"
                    }
                  }
                  ],
                  "responses": {
                    "200": {
                      "description": "parent found",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/Parents"
                          }
                        }
                      }
                    },
                    "404": {
                      "description": "parent not found",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
        "/parents/update/{id}": {
          "put":{
            "tags": ["parent"],
                "summary": "Update parent",
                "description": "Update parent with the provided details",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Parents"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parents"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parent Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parents"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "parent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
        }
        },
        "/parents/delete/{id}": {
          "delete": {
            "tags": [
              "parent"
            ],
            "summary": "Delete a parent",
            "description": "Delete a parent with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "parent deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Parents"
                    }
                  }
                }
              },
              "404": {
                "description": "parent not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/book/add": {
          "post": {
            "tags": [
              "book"
            ],
            "summary": "Add a new book",
            "description": "add a new book with  the provided details",
            "parameters": [
             
              {
                "name": "bookName",
                "in": "formData",
                "required": true,
                "type":"string"
              },
              {
                "name": "image",
                "in": "formData",
                "required": true,
                "type":"file"
              },
              {
                "name": "description",
                "in": "formData",
                "required": true,
                "type":"string"
              },
              {
                "name": "writerName",
                "in": "formData",
                "required": true,
                "type":"string"
              }
             
            ],
            "requestBody":{
              "content":{
                "application/json":{
                  "schema":{
                    "$ref": "#/components/schemas/book"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Book added successfully"
              },
              "401": {
                "description": "Bad request -Validation error"
              }
            }
          }
        },
      
    

    
    "/book/list": {
          "get": {
            "tags": [
              "book"
            ],
            "summary": "Get all books",
            "description": "Returns all the books",
            "responses": {
              "200": {
                "description": "All the books",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/book"
                      }
                    }
                  }
                }
              }
            }
          }
        },
    
    
        "/book/get/{id}": {
          "get": {
            "tags": [
              "book"
            ],
            "summary": "Get a book by id",
            "description": "Returns a book with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "book found",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/book"
                    }
                  }
                }
              },
              "404": {
                "description": "book not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/book/get/{category}":{
          "get":
          {
            "tags":["book"],
            "summary":"Get a book by book category",
            "description":"Returns a book with the provided Category",
            "parameters":[
                {
                    "name":"category",
                    "in":"path",
                    "required":true,
                    "schema":{
                        "type":"string"
                    }
                  }
                  ],
                  "responses": {
                    "200": {
                      "description": "book found",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/book"
                          }
                        }
                      }
                    },
                    "404": {
                      "description": "book not found",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
        "/book/update/{id}": {
          "put":{
            "tags": ["book"],
                "summary": "Update book",
                "description": "Update book with the provided details",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/book"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/book"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "book Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
        }
        },
        "/book/delete/{id}": {
          "delete": {
            "tags": [
              "book"
            ],
            "summary": "Delete a  book",
            "description": "Delete a book with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "book deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/book"
                    }
                  }
                }
              },
              "404": {
                "description": "book not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
         
        "/instructor/add": {
          "post": {
            "tags": [
              "instructor"
            ],
            "summary": "Add a new instructor",
            "description": "add a new instructor with  the provided details",
            "parameters": [
              {
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/instructor"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/instructor"
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "an instructor added successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/instructor"
                    }
                  }
                }
              },
              "400": {
                "description": "Bad request -Validation error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
    "/instructor/list": {
          "get": {
            "tags": [
              "instructor"
            ],
            "summary": "Get all instructors",
            "description": "Returns all the instructors",
            "responses": {
              "200": {
                "description": "All the instructors",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/instructor"
                      }
                    }
                  }
                }
              }
            }
          }
        },
    
    
        "/instructor/get/{id}": {
          "get": {
            "tags": [
              "instructor"
            ],
            "summary": "Get an instructor by id",
            "description": "Returns an instructor with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "instructor found",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/instructor"
                    }
                  }
                }
              },
              "404": {
                "description": "instructor not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        
        "/instructor/update/{id}": {
          "put":{
            "tags": ["instructor"],
                "summary": "Update instructor",
                "description": "Update an instructor with the provided details",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/instructor"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/instructor"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "instructor Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/insturctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "instructor not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
        }
        },
        "/instructor/delete/{id}": {
          "delete": {
            "tags": [
              "instructor"
            ],
            "summary": "Delete an instructor",
            "description": "Delete an instructor with the provided id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "instructor deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/instructor"
                    }
                  }
                }
              },
              "404": {
                "description": "instructor not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },

      "/contactus/contact":{
        "post": {
          "tags": ["contact us"],
          "summary":"Add new message",
          "description":"add a new message",
          "parameters":[
            {
              "name":"body",
              "in":"body",
              "schema":{
                "$ref":"#/components/schemas/contactus"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contactus"

                }
              }
            }
          },
          "responses":{
            "201":{
              "description":"message added successfully",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/contactus"
                  }
                }
              }
            },
            "400":{
              "description":"bad request",
              "content":{
                "application/json":{
                  "schema":{
                    "type":"object",
                    "properties":{
                      "message":{
                        "type":"string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/contactus/listMessage":{
        "get":{
          "tags":["contact us"],
          "summary":"list all messages",
          "description":"list all message sent",
          "responses":{
            "200":{
              "description":"list all messages",
              "content":{
                "application/json":{
                  "schema":{
                    "type":"array",
                    "items":{
                      "$ref":"#/components/schemas/contactus"
                    }
                  }
                }
              }
            }
          }
          
        }
      },
     
        

      "/contactus/delete/{id}":{
        "delete":{
          "tags":["contact us"],
          "summary":"delete message by id",
          "description":"delete message by id",
          "parameters": [{
            "name": "id",
            "in":"path",
            "required":true,
            "schema":{
              "type":"string"
            }

          }],
          "responses":{
            "200":{
              "description":"delete message by id",
              "content":{
                "application/json":{
                  "schema":{
                    "$ref":"#/components/schemas/contactus"
                  }
                }
              }
            },
            "404":{
              "description":"message not found",
              "content":{
                "application/json":{
                  "schema":{
                    "type":"object",
                    "properties":{
                      "message":{
                        "type":"string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      },

    "components":{
        "schemas":
        {
            "User":
            {
                "type":"object",
                "properties":
                {
                    "name":{
                        "type":"string",
                        "description":"name of the User"
                    },
                    "email":{
                        "type":"string",
                        "description":"email of the User"
                    },
                    "password":{
                        "type":"string",
                        "description":"password of the User"
                    },
                    "confirmPassword":{
                      "type":"string",
                      "description":"password of the User"
                  },
                    "role":
                    {
                        "type":"string",
                        "description":"role of the User",
                        "default":"instructor or parent"

                    }
                },
                "required":["password","email","role","name"]
            },
            
            "Courses": {
              "type": "object",
              "properties": {
                "tittle": {
                  "type": "string",
                  "description": "tittle of the course"
                },
                "description": {
                  "type": "string",
                  "description": "Summary of what the course is about"
                },
               

                "instructor": {
                  "type": "string",
                  "description": "instructor name of the course"
                },

                "category": {
                  "type": "string",
                  "enum": [
                    "Grade 1",
                    "Grade 2",
                    "Grade 3",
                    "Grade 4",
                    "Grade 5",
                    "Grade 6",
                     "Grade 7",
                     "Grade 8",
                     "Grade 9"
                                 ],
                  "default": "Grade 1"
                }
                 
            },
            "required": [
              "tittle",
              "category",
              "description",
              "instructor"
            ]
      

            
        },
        "contactus":{
          "type": "object",
          "properties": {
            "fullName":{
              "type": "string",
              "description":"fullname of user"
            },
            "email":{
              "type": "string",
              "description":"email of the User"
            },

            "subject":{
              "type": "string",
              "description":"Subject of the message"
            },

            "message":{
              "type": "string",
              "description":"message to be sent"
            }
           
          },
          "required":["fullname","email","subject","message"]
        },

        "Parents": {
          "type": "object",
          "properties": {
            "parentEmail": {
              "type": "string",
              "description": "email of the parent"
            },
  
                 "parentContact":{
                         "type":"string",
                      "description":"contact of the parent"
                   },
  
                 
    "parentName":{
        "type":"string",
        "description":"name of the parent"
           },

           "childName":{
            "type":"string",
            "description":"name of the child"
               },
  
                     "category": {
              "type": "string",
              "enum": {
                "values": [
                  "Grade 1",
                  "Grade 2",
                  "Grade 3",
                  "Grade 4",
                 "Grade 5",
               "Grade 6",
               "Grade 7",
             "Grade 8",
              "Grade 9"
                ],
                "message": "{values} is not a valid course category"
              },
              "default": "Grade 1"
            }},
            "required": [
             "parentName",
             "email",
            "childName",
            "category",
            "parentContact"
        ]
      },

      "instructor": {
        "type": "object",
        "properties": {
          "instructorEmail": {
            "type": "string",
            "description": "email of the instructor"
          },

               "instructorContact":{
                       "type":"string",
                    "description":"contact of the parent"
                 },

               
  "instructorName":{
      "type":"string",
      "description":"name of the instructor"
         },
         "course":{
          "type":"string",
      "description":"name of the course"
         }
},
          "required": [
           "instructorName",
           "instructorEmail",
           "instructorContact",
           "course"
          
      ]
    },

      "book": {
        "type": "object",
        "properties": {
          "bookName": {
            "type": "string",
            "description": "name of the book"
          },

               
               
  "description":{
      "type":"string",
      "description":"description of the book"
         },

         "image":{
          "type":"string",
          "description":"name of the book"
             },
             "url":{
              "type":"string",
              "description":"url link of the book"
             },
             
         "writername":{
          "type":"string",
          "description":"writer of the book"
             }

          }},
          "required": [
           "bookName",
           "description",
          "image",
          "url",
          "writeName"
         
      ]
    }
      
    }  
  }

      
    

 

 

